service: '${env:SERVICE_NAME_PREFIX, "inbox-api-local"}'
frameworkVersion: '3'
useDotenv: true

custom:
  secretsPrefix: '/${env:SERVICE_NAME_PREFIX, "local"}'
  stage: '${opt:stage, self:provider.stage, "local"}'
  stackName: '${self:service}'
  # customDomain: 
  #   domainName: ${env:API_GATEWAY_CUSTOM_DOMAIN, ssm:${self:custom.secretsPrefix}/API_GATEWAY_CUSTOM_DOMAIN}
  #   stage: ${opt:stage, "local"}
  #   basePath: ${env:API_GATEWAY_SUFFIX, ssm:${self:custom.secretsPrefix}/API_GATEWAY_SUFFIX, "inbox"}
  #   createRoute53Record: false
  #   createRoute53IPv6Record: false
  #   apiType: rest
  #   autoDomain: false
  #   endpointType: REGIONAL

provider:
  name: aws
  region: ${env:AWS_REGION, "us-east-1"}
  runtime: nodejs20.x
  endpointType: PRIVATE
  apiGateway:
    resourcePolicy:
      - Effect: Allow
        Principal: "*"
        Action: execute-api:Invoke
        Resource: execute-api:/*

functions:
  healthCheck:
    handler: src/handlers/healthCheck.handler
    events:
      - http:
          method: get
          path: v1/health-check

  addMessage:
    handler: src/handlers/addMessage.handler
    events:
      - http:
          method: post
          path: v1/conversations/{conversationId}/messages

  addConversation:
    handler: src/handlers/addConversation.handler
    events:
      - http:
          method: post
          path: v1/conversations

plugins:
  - serverless-dotenv-plugin
  # - serverless-domain-manager  
  - serverless-offline
  - serverless-esbuild
