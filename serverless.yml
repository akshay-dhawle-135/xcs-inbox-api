service: '${env:SERVICE_NAME_PREFIX, "inbox-api-local"}'
frameworkVersion: '3'
useDotenv: true

custom:
  secretsPrefix: '/${env:SERVICE_NAME_PREFIX, "local"}'
  stage: '${opt:stage, self:provider.stage, "local"}'
  stackName: '${self:service}'
  # customDomain:
  #   domainName: csgfic64w5
  #   stage: dev
  #   basePath: "inbox"
  #   createRoute53Record: false
  #   createRoute53IPv6Record: false
  #   apiType: rest
  #   autoDomain: false
  #   endpointType: REGIONAL
# datadog:
#   site: us5.datadoghq.com
#   apiKey: '${env:DD_API_KEY, ssm:${self:custom.secretsPrefix}/DD_API_KEY}'
#   appKey: '${env:DD_APP_KEY, ssm:${self:custom.secretsPrefix}/DD_APP_KEY}'
#   forwarderArn: '${env:DD_FORWARDER_ARN, ssm:${self:custom.secretsPrefix}/DD_FORWARDER_ARN}'

provider:
  name: aws
  region: ${env:AWS_REGION, "us-east-1"}
  runtime: nodejs20.x
  endpointType: PRIVATE
  environment:
    XPLOR_GROWTH_EVENT_BUS_NAME: arn:aws:events:us-east-1:501921308880:event-bus/xcs-dev-usea1-common-eventbridge-xplor-growth-event-bus  

  iam:
    role:
      name: ${self:service}-exec-role
      managedPolicies: ${env:EXECUTION_ROLE_SUPPLEMENTAL_POLICY_ARN, ssm:${self:custom.secretsPrefix}/EXECUTION_ROLE_SUPPLEMENTAL_POLICY_ARN, null}

  apiGateway:
    resourcePolicy:
      - Effect: Allow
        Principal: '*'
        Action: execute-api:Invoke
        Resource: execute-api:/*

functions:
  healthCheck:
    handler: src/handlers/healthCheck.handler
    events:
      - http:
          method: get
          path: v1/health-check

  addMessage:
    handler: src/handlers/addMessage.handler
    events:
      - http:
          method: post
          path: v1/conversations/{conversationId}/messages

  addConversation:
    handler: src/handlers/addConversation.handler
    events:
      - http:
          method: post
          path: v1/conversations

  addParticipants:
    handler: src/handlers/addParticipants.handler
    events:
      - http:
          method: post
          path: v1/conversations/{conversationId}/participants


# resources:
#   Resources:
#     # Explicit deployment
#     ApiGatewayDeployment:
#       Type: AWS::ApiGateway::Deployment
#       # ApiGatewayMethod + base + (path params + var) + method type
#       DependsOn:
#         - ApiGatewayMethodV1HealthDashcheckGet
#         - ApiGatewayMethodV1ConversationsConversationidVarMessagesPost
#         - ApiGatewayMethodV1ConversationsPost
#         - ApiGatewayMethodV1ConversationsConversationidVarParticipantsPost
#       Properties:
#         RestApiId:
#           Ref: ApiGatewayRestApi
#         StageName: dev  

#     ApiGatewayBasePathMapping:
#       Type: AWS::ApiGateway::BasePathMappingV2
#       DependsOn: 
#         - ApiGatewayDeployment
#       Properties:
#         RestApiId:
#           Ref: ApiGatewayRestApi
#         Stage: dev
#         BasePath: 'inbox'
#         DomainNameArn: arn:aws:apigateway:us-east-1:599272883479:/domainnames/api.qubly.site+csgfic64w5

plugins:
  - serverless-dotenv-plugin
  # - serverless-plugin-datadog
  # - serverless-domain-manager
  - serverless-offline
  - serverless-esbuild
