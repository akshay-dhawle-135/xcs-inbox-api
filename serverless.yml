service: '${env:SERVICE_NAME_PREFIX, "inbox-api-local"}'
frameworkVersion: '3'
useDotenv: true

custom:
  secretsPrefix: '/${env:SERVICE_NAME_PREFIX, "local"}'
  stage: '${opt:stage, self:provider.stage, "local"}'
  stackName: '${self:service}'
  # customDomain: 
  #   domainName: ${env:API_GATEWAY_CUSTOM_DOMAIN, ssm:${self:custom.secretsPrefix}/API_GATEWAY_CUSTOM_DOMAIN}
  #   stage: ${opt:stage, "local"}
  #   basePath: ${env:API_GATEWAY_SUFFIX, ssm:${self:custom.secretsPrefix}/API_GATEWAY_SUFFIX, "inbox"}
  #   createRoute53Record: false
  #   createRoute53IPv6Record: false
  #   apiType: rest
  #   autoDomain: false
  #   endpointType: REGIONAL
  #   domainNameId: ${env:API_GATEWAY_CUSTOM_DOMAIN_NAME_ID, ssm:${self:custom.secretsPrefix}/API_GATEWAY_CUSTOM_DOMAIN_NAME_ID}
  # datadog:
  #   site: us5.datadoghq.com
  #   apiKey: '${env:DD_API_KEY, ssm:${self:custom.secretsPrefix}/DD_API_KEY}'
  #   appKey: '${env:DD_APP_KEY, ssm:${self:custom.secretsPrefix}/DD_APP_KEY}'
  #   forwarderArn: '${env:DD_FORWARDER_ARN, ssm:${self:custom.secretsPrefix}/DD_FORWARDER_ARN}'

provider:
  name: aws
  region: ${env:AWS_REGION, "us-east-1"}
  runtime: nodejs20.x
  endpointType: PRIVATE
  apiGateway:
    resourcePolicy:
      - Effect: Allow
        Principal: "*"
        Action: execute-api:Invoke
        Resource: execute-api:/*

functions:
  healthCheck:
    handler: src/handlers/healthCheck.handler
    events:
      - http:
          method: get
          path: v1/health-check

  addMessage:
    handler: src/handlers/addMessage.handler
    events:
      - http:
          method: post
          path: v1/conversations/{conversationId}/messages

  addConversation:
    handler: src/handlers/addConversation.handler
    events:
      - http:
          method: post
          path: v1/conversations

  addParticipants:
    handler: src/handlers/addParticipants.handler
    events:
      - http:
          method: post
          path: v1/conversations/{conversationId}/participants

  getConversations:
    handler: src/handlers/getConversations.handler
    events:
      - http:
          method: get
          path: v1/conversations

  getConversationMessages:
    handler: src/handlers/getConversationMessages.handler
    events:
      - http:
          method: get
          path: v1/conversations/{conversationId}/messages

# resources:
#   Resources:
#     ApiGatewayBasePathMapping:
#       Type: AWS::ApiGateway::BasePathMapping
#       Properties:
#         DomainName: ${env:API_GATEWAY_CUSTOM_DOMAIN, ssm:${self:custom.secretsPrefix}/API_GATEWAY_CUSTOM_DOMAIN}
#         RestApiId:
#           Ref: ApiGatewayRestApi
#         Stage: ${self:custom.stage}
#         BasePath: ${ssm:${self:custom.secretsPrefix}/API_GATEWAY_SUFFIX, "inbox"}

plugins:
  - serverless-dotenv-plugin
  # - serverless-plugin-datadog
  # - serverless-domain-manager  
  - serverless-offline
  - serverless-esbuild
